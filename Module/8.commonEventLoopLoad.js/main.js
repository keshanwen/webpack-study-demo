var a = require('./a.js');
var b = require('./b.js');
console.log('在 main.js 之中, a.done=%j, b.done=%j', a.done, b.done);

/*
    上面的代码证明了两件事。一是，在b.js之中，a.js没有执行完毕，只执行了第一行。
    二是，main.js执行到第二行时，不会再次执行b.js，而是输出缓存的b.js的执行结果，即它的第四行。
    总之，CommonJS 输入的是被输出值的拷贝，不是引用。

    另外，由于 CommonJS 模块遇到循环加载时，返回的是当前已经执行的部分的值，而不是代码全部执行后的值，两者可能会有差异。
    所以，输入变量的时候，必须非常小心。

    CommonJS 模块的重要特性是加载时执行，即脚本代码在require的时候，
    就会全部执行。一旦出现某个模块被"循环加载"，就只输出已经执行的部分，还未执行的部分不会输出。

*/ 